<tool id="isa_create_isatab" name="Create ISA in Galaxy" version="1.1.0">
    <description>Interactive tool to create ISA archives based on study design information</description>

    <macros>
        <import>isa_create_macros.xml</import>
    </macros>

    <requirements>
        <requirement type="package" version="6.7">click</requirement>
        <requirement type="package" version="0.9.3">isatools</requirement>
    </requirements>

    <stdio>
        <exit_code range="1:" />
    </stdio>

    <command>
        <![CDATA[
        $script_file "$inputs" "$__tool_directory__/";

        mkdir study_dir;

        $__tool_directory__/cli.py
        --sample_assay_plans_file="$__tool_directory__/sample_assay_plans.json"
        --study_info_file="$__tool_directory__/study_info.json"
        --treatment_plans_file="$__tool_directory__/treatment_plan.json"
        --target_dir=study_dir/
        ]]>
    </command>

    <configfiles>
        <configfile name="script_file">
<![CDATA[
#!/usr/bin/env python
"""Map galaxy input JSON to something cli.py and ISA API can consume"""

import json
import sys
import os

parameters_file = sys.argv[1]
out_dir = sys.argv[2]
with open(parameters_file) as fp:
    tool_params = json.load(fp)
    print(json.dumps(tool_params, indent=4))
if tool_params is None:
    raise IOError('Could not load tool parameters file')
sample_and_assay_plans = {
    "sample_types": [],
    "group_size": 1,
    "sample_plan": [],
    "sample_qc_plan": [],
    "assay_types": [],
    "assay_plan": []
}
for sample_plan_params in tool_params[
    'sampling_and_assay_plans']['sample_record_series']:
    sample_plan = {
        'sample_type': sample_plan_params['sample_type']['sample_type'],
        'sampling_size': sample_plan_params['sample_size']
    }
    sample_and_assay_plans['sample_types'].append(
        sample_plan['sample_type'])
    sample_and_assay_plans['sample_plan'].append(sample_plan)

    if 'assay_record_series' in sample_plan_params.keys():
        for assay_plan_params in sample_plan_params['assay_record_series']:
            tt = assay_plan_params['assay_type']['assay_type']
            if tt == 'mass spectrometry':
                raise NotImplementedError(
                    'MS assays not yet supported, try NMR first')
            elif tt == 'nmr spectroscopy':
                assay_type = {
                    'topology_modifiers': {
                        'technical_replicates': assay_plan_params['assay_type'][
                            'acq_mod_cond']['technical_replicates'],
                        'acquisition_modes': [
                            assay_plan_params['assay_type']['acq_mod_cond']['acq_mod']],
                        'instruments': [
                            assay_plan_params['assay_type']['acq_mod_cond']['nmr_instrument']],
                        'injection_modes': [],
                        'pulse_sequences': [
                            assay_plan_params['assay_type']['acq_mod_cond']['pulse_seq']]
                    },
                    'technology_type': 'nmr spectroscopy',
                    'measurement_type': 'metabolite profiling'
                }
            else:
                raise NotImplementedError('Only NMR and MS assays supported')
            assay_plan = {
                "sample_type": sample_plan['sample_type'],
                "assay_type": assay_type
            }
            sample_and_assay_plans['assay_types'].append(assay_type)
            sample_and_assay_plans['assay_plan'].append(assay_plan)
    for qc_plan_params in tool_params['qc_plan']['qc_record_series']:
        if 'dilution' in qc_plan_params['qc_type_conditional']['qc_type']:
            raise NotImplementedError('Dilution series not yet implemented')
        else:
            qc_plan = {
                'sample_type': qc_plan_params['qc_type_conditional']['qc_type'],
                'injection_interval': qc_plan_params['qc_type_conditional'][
                    'injection_freq']
            }
        sample_and_assay_plans['sample_qc_plan'].append(qc_plan)
sample_and_assay_plans['group_size'] = tool_params['treatment_plan'][
    'study_group_size']
with open(os.path.join(out_dir, 'sample_assay_plans.json'), 'w') as out_fp:
    json.dump(sample_and_assay_plans, out_fp, indent=4)
with open(os.path.join(out_dir, 'study_info.json'), 'w') as out_fp:
    json.dump(tool_params['study_overview'], out_fp, indent=4)
with open(os.path.join(out_dir, 'treatment_plan.json'), 'w') as out_fp:
    json.dump(tool_params['treatment_plan'], out_fp, indent=4)
]]>
        </configfile>
        <inputs name="inputs" />
    </configfiles>

    <inputs>
        <expand macro="study_info_macro" />
        <expand macro="treatment_plan_macro" />
        <expand macro="sample_assay_plan_macro" />
        <expand macro="qc_plan_macro" />
    </inputs>

    <outputs>
        <collection type="list" label="A files" name="a_files">
            <discover_datasets pattern="(?P&lt;designation&gt;a_.+)\.txt" format="tsv" directory="study_dir/" />
        </collection>
        <data name="s_study" label="S file" format="tsv" from_work_dir="study_dir/s_study.txt" />
        <data name="i_investigation" label="I file" format="tsv" from_work_dir="study_dir/i_investigation.txt" />
        <!--<data format="isa-tab" name="output" />-->
    </outputs>

    <tests>
        <test>

            <!-- FIXME: Is supposed to produce same as in test-data/galaxy_inputs.json, but it doesn't
                Do nested <repeat> tags in tests work?? -->

            <!-- in sample_record_series -->
            <repeat name="sample_record_series">
                <param name="sample_type" value="plasma" />
                <param name="sample_size" value="1" />

                <repeat name="assay_record_series">
                    <param name="assay_type" value="nmr spectroscopy" />
                    <param name="magnet" value="strong" />
                    <param name="pulse_seq" value="wet" />
                    <param name="nmr_instrument" value="Bruker 500 Mhz" />
                    <param name="technical_replicates" value="10" />
                    <param name="acq_mod" value="1D 1H NMR" />
                </repeat>
            </repeat>

            <!-- in study overview -->
            <param name="study_pi_affiliation" value="affiliation" />
            <param name="study_description" value="description" />
            <param name="study_pi_last_name" value="last name" />
            <param name="study_pi_email" value="email address" />
            <param name="study_pi_first_name" value="first name" />

            <!-- in treatment_plan -->
            <param name="study_group_size" value="3" />
            <param name="study_type" value="intervention" />
            <param name="single_or_multiple" value="single" />
            <param name="select_intervention_type" value="chemical intervention" />
            <param name="duration" value="long, short" />
            <param name="intensity" value="intensity1, intensity2" />
            <param name="agent" value="agent1, agent2" />

            <!-- in qc_plan -->
            <repeat name="qc_record_series">
                <param name="qc_type" value="study reference" />
                <param name="nb_injection" value="10" />
                <param name="injection_freq" value="5" />
            </repeat>
            <repeat name="qc_record_series">
                <param name="qc_type" value="dilution series reference" />
                <param name="nb_dil_step" value="10" />
                <param name="nb_injection" value="10" />
                <param name="injection_freq" value="1" />
            </repeat>


            <output name="i_investigation" value="i_investigation.txt" />
            <output name="s_study" value="s_study.txt" />
            <output_collection name="a_files" type="list" count="2">
                <element name="a_blood_ms_LC_positive_assay">
                    <assert_contents>
                        <has_n_columns n="77" />
                    </assert_contents>
                </element>
                <element name="a_blood_ms_LC_negative_assay">
                    <assert_contents>
                        <has_n_columns n="77" />
                    </assert_contents>
                </element>
            </output_collection>
        </test>
</tests>

    <help>
        **What it does**

        This tool helps create ISA documents using study design information. Suppose you have a study like this one::

         A Study looking at the effect of Drugs A and B administered at high and low dose with plasma samples collected at 3 times points, and done in n=5 subjects per treatment groups.
         The response variables are metabolite profiles measured by LC-MS in positive and negative mode on one instance of thermofisher instrument.

         Formalization:
            i. intervention study
            ii. single intervention
                a. chemical intervention
                    independent variable: chemical agent
                                range of values: [a,b]
                    independent variable: dose
                                range of values: [high,low]
                    independent variable: time
                                range of values: [t1,t2,t3]

                    Important: specific variable values as discrete elments of a comma (,) separated list, as shown in the examples provided.
            iii. study design: 2x2x3 factorial
            iv. study design: balanced + full factorial
            v. number of biological replicates: n=5 per study groups
            vi. specimen collection:
                specimen type: [plasma]
                number of collection: 3
            vii. assay plan:
                a. technology type: MS
                b. topology modifiers:
                    injection method: [LC]
                    fractions: [polar,non-polar]
                    data acquisition modes: [negative,positive]
                    instrument type: ThermoFisher XYZ
                    instrument instance: 1
                    technical replicates: 2
                    number of batches: 1


    </help>

    <citations>
        <citation type="doi">10.1007/s11306-015-0879-3</citation>
    </citations>
</tool>